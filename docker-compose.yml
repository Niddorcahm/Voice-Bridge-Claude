version: '3.8'

services:
  voice-bridge-pathology:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        USER_ID: 1000
        GROUP_ID: 1000
    container_name: voice-bridge-pathology
    restart: unless-stopped
    
    # Environment variables
    environment:
      # Azure Configuration (use secrets in production)
      - AZURE_SPEECH_KEY=${AZURE_SPEECH_KEY}
      - AZURE_SPEECH_REGION=${AZURE_SPEECH_REGION:-eastus}
      - SPEECH_LANGUAGE=${SPEECH_LANGUAGE:-es-CO}
      - TTS_VOICE=${TTS_VOICE:-es-CO-SalomeNeural}
      
      # Application Settings
      - MEDICAL_MODE=true
      - HIPAA_COMPLIANCE=true
      - DEBUG_MODE=false
      - DISPLAY=:99
      
      # Security Settings
      - ENCRYPT_TRANSCRIPTIONS=true
      - AUDIT_LOGGING=true
      - DATA_RETENTION_DAYS=2555
    
    # Volume mounts for persistent data
    volumes:
      # Configuration
      - ./config:/app/config:rw
      - ./config/diccionarios:/app/config/diccionarios:rw
      
      # Data persistence
      - voice-bridge-logs:/app/logs
      - voice-bridge-audit:/app/audit-logs
      - voice-bridge-backups:/app/backups
      
      # Audio device access (Linux)
      - /dev/snd:/dev/snd:rw
      - /run/user/1000/pulse:/run/user/1000/pulse:rw
      
      # X11 forwarding for GUI (if needed)
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${HOME}/.Xauthority:/home/voicebridge/.Xauthority:ro
    
    # Device access for audio
    devices:
      - /dev/snd:/dev/snd
    
    # Network configuration
    network_mode: "host"  # Required for X11 and audio
    
    # Security context
    user: "1000:1000"
    
    # Resource limits (adjust based on needs)
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import azure.cognitiveservices.speech; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
        labels: "service=voice-bridge-pathology"

  # Optional: Separate service for web interface (future enhancement)
  voice-bridge-web:
    image: nginx:alpine
    container_name: voice-bridge-web
    restart: unless-stopped
    profiles:
      - web
    ports:
      - "8080:80"
    volumes:
      - ./web:/usr/share/nginx/html:ro
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - voice-bridge-pathology
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

  # Optional: Database for audit logs (future enhancement)
  voice-bridge-db:
    image: postgres:14-alpine
    container_name: voice-bridge-db
    restart: unless-stopped
    profiles:
      - database
    environment:
      - POSTGRES_DB=voice_bridge_audit
      - POSTGRES_USER=voice_bridge
      - POSTGRES_PASSWORD=${DB_PASSWORD:-secure_password_change_me}
    volumes:
      - voice-bridge-db-data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U voice_bridge"]
      interval: 30s
      timeout: 10s
      retries: 5

# Named volumes for data persistence
volumes:
  voice-bridge-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/docker-volumes/logs
  
  voice-bridge-audit:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/docker-volumes/audit-logs
  
  voice-bridge-backups:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/docker-volumes/backups
  
  voice-bridge-db-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/docker-volumes/db-data

# Networks (if custom networking needed)
networks:
  voice-bridge-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# ==========================================
# Docker Compose Profiles
# ==========================================

# Usage Examples:
# 
# Basic deployment:
# docker-compose up voice-bridge-pathology
#
# With web interface:
# docker-compose --profile web up
#
# Full deployment with database:
# docker-compose --profile web --profile database up
#
# Development mode:
# docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
