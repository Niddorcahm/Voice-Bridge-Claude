# Voice Bridge Pathology - Supervisor Configuration
# Process management for containerized deployment

[supervisord]
nodaemon=true
user=root
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid
childlogdir=/var/log/supervisor

[unix_http_server]
file=/var/run/supervisor.sock
chmod=0700

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

# ==========================================
# Voice Bridge Pathology Main Application
# ==========================================

[program:voice-bridge-app]
command=/opt/venv/bin/python voice_bridge_app.py
directory=/app
user=voicebridge
autostart=true
autorestart=true
startretries=3
redirect_stderr=true
stdout_logfile=/app/logs/voice_bridge_supervisor.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=10
environment=PYTHONPATH="/app",VIRTUAL_ENV="/opt/venv",PATH="/opt/venv/bin:%(ENV_PATH)s"

# Application-specific settings
priority=100
startsecs=10
stopwaitsecs=30
killasgroup=true
stopasgroup=true

# ==========================================
# Virtual Display (Xvfb) for Headless GUI
# ==========================================

[program:xvfb]
command=/usr/bin/Xvfb :99 -screen 0 1024x768x24 -ac +extension GLX +render -noreset
user=voicebridge
autostart=true
autorestart=true
startretries=3
redirect_stderr=true
stdout_logfile=/var/log/supervisor/xvfb.log
priority=10

# Start before main application
startsecs=3
stopwaitsecs=10

# ==========================================
# PulseAudio System (for audio processing)
# ==========================================

[program:pulseaudio]
command=/usr/bin/pulseaudio --system --disallow-exit --disallow-module-loading=false --log-target=stderr --log-level=info
user=pulse
autostart=true
autorestart=true
startretries=3
redirect_stderr=true
stdout_logfile=/var/log/supervisor/pulseaudio.log
priority=20

# Audio system specific settings
environment=PULSE_RUNTIME_PATH="/var/run/pulse"
startsecs=5
stopwaitsecs=15

# ==========================================
# Log Rotation Service
# ==========================================

[program:log-rotator]
command=/usr/sbin/logrotate -f /etc/logrotate.d/voice-bridge
user=root
autostart=false
autorestart=false
startretries=1
redirect_stderr=true
stdout_logfile=/var/log/supervisor/logrotate.log

# Run daily
startsecs=1
priority=999

# ==========================================
# Health Check Service
# ==========================================

[program:health-checker]
command=/bin/bash -c 'while true; do sleep 300; python -c "import azure.cognitiveservices.speech; print(\"Health check OK\")" || echo "Health check FAILED"; done'
directory=/app
user=voicebridge
autostart=true
autorestart=true
startretries=999
redirect_stderr=true
stdout_logfile=/var/log/supervisor/health_check.log
environment=PYTHONPATH="/app",VIRTUAL_ENV="/opt/venv",PATH="/opt/venv/bin:%(ENV_PATH)s"

# Health check specific settings
priority=200
startsecs=1
stopwaitsecs=5

# ==========================================
# Configuration Backup Service
# ==========================================

[program:config-backup]
command=/bin/bash -c 'while true; do sleep 86400; /app/examples/backup_config.sh; done'
directory=/app
user=voicebridge
autostart=true
autorestart=true
startretries=3
redirect_stderr=true
stdout_logfile=/var/log/supervisor/config_backup.log

# Backup service settings
priority=300
startsecs=1
stopwaitsecs=10

# ==========================================
# Audit Log Monitor
# ==========================================

[program:audit-monitor]
command=/bin/bash -c 'tail -F /app/audit-logs/*.log'
directory=/app
user=voicebridge
autostart=true
autorestart=true
startretries=3
redirect_stderr=false
stdout_logfile=/var/log/supervisor/audit_monitor.log

# Audit monitoring settings
priority=150
startsecs=5
stopwaitsecs=5

# ==========================================
# Event Listeners
# ==========================================

[eventlistener:crashmail]
command=/usr/local/bin/crashmail
events=PROCESS_STATE_EXITED
args=-o hostname -a -m alert@voice-bridge-medical.org
environment=PYTHONPATH="/app"
priority=1

# ==========================================
# Group Definitions
# ==========================================

[group:voice-bridge-core]
programs=voice-bridge-app,xvfb,pulseaudio
priority=100

[group:voice-bridge-monitoring]
programs=health-checker,audit-monitor
priority=200

[group:voice-bridge-maintenance]
programs=config-backup,log-rotator
priority=300

# ==========================================
# Supervisor Web Interface (Optional)
# ==========================================

[inet_http_server]
port=127.0.0.1:9001
username=admin
password=voice-bridge-supervisor

# ==========================================
# Include Additional Configurations
# ==========================================

[include]
files = /etc/supervisor/conf.d/*.conf

# ==========================================
# Log Configuration
# ==========================================

[supervisord]
logfile_maxbytes=50MB
logfile_backups=10
loglevel=info

# ==========================================
# Security Settings
# ==========================================

[supervisord]
# Run as non-root where possible
# Ensure proper file permissions
# Limit resource usage

# ==========================================
# Medical Compliance Settings
# ==========================================

# All logs are written to persistent volumes
# Audit trails are maintained separately
# Configuration backups are automated
# Health checks ensure service availability

# ==========================================
# Environment-Specific Overrides
# ==========================================

# Development: Enable debug logging
# Staging: Reduce backup frequency
# Production: Enable all monitoring

# ==========================================
# Troubleshooting Commands
# ==========================================

# View status: supervisorctl status
# Restart app: supervisorctl restart voice-bridge-app
# View logs: supervisorctl tail -f voice-bridge-app
# Reload config: supervisorctl reread && supervisorctl update
